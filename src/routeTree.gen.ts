/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WalletImport } from './routes/wallet'
import { Route as StatisticsImport } from './routes/statistics'
import { Route as PaymentsImport } from './routes/payments'
import { Route as MessagesImport } from './routes/messages'
import { Route as LoginImport } from './routes/login'
import { Route as DocumentImport } from './routes/document'
import { Route as DiscordImport } from './routes/discord'
import { Route as IndexImport } from './routes/index'
import { Route as CodeIdImport } from './routes/code.$id'

// Create/Update Routes

const WalletRoute = WalletImport.update({
  path: '/wallet',
  getParentRoute: () => rootRoute,
} as any)

const StatisticsRoute = StatisticsImport.update({
  path: '/statistics',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsRoute = PaymentsImport.update({
  path: '/payments',
  getParentRoute: () => rootRoute,
} as any)

const MessagesRoute = MessagesImport.update({
  path: '/messages',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DocumentRoute = DocumentImport.update({
  path: '/document',
  getParentRoute: () => rootRoute,
} as any)

const DiscordRoute = DiscordImport.update({
  path: '/discord',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CodeIdRoute = CodeIdImport.update({
  path: '/code/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/discord': {
      id: '/discord'
      path: '/discord'
      fullPath: '/discord'
      preLoaderRoute: typeof DiscordImport
      parentRoute: typeof rootRoute
    }
    '/document': {
      id: '/document'
      path: '/document'
      fullPath: '/document'
      preLoaderRoute: typeof DocumentImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/messages': {
      id: '/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesImport
      parentRoute: typeof rootRoute
    }
    '/payments': {
      id: '/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsImport
      parentRoute: typeof rootRoute
    }
    '/statistics': {
      id: '/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsImport
      parentRoute: typeof rootRoute
    }
    '/wallet': {
      id: '/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletImport
      parentRoute: typeof rootRoute
    }
    '/code/$id': {
      id: '/code/$id'
      path: '/code/$id'
      fullPath: '/code/$id'
      preLoaderRoute: typeof CodeIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DiscordRoute,
  DocumentRoute,
  LoginRoute,
  MessagesRoute,
  PaymentsRoute,
  StatisticsRoute,
  WalletRoute,
  CodeIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/discord",
        "/document",
        "/login",
        "/messages",
        "/payments",
        "/statistics",
        "/wallet",
        "/code/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/discord": {
      "filePath": "discord.tsx"
    },
    "/document": {
      "filePath": "document.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/messages": {
      "filePath": "messages.tsx"
    },
    "/payments": {
      "filePath": "payments.tsx"
    },
    "/statistics": {
      "filePath": "statistics.tsx"
    },
    "/wallet": {
      "filePath": "wallet.tsx"
    },
    "/code/$id": {
      "filePath": "code.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
